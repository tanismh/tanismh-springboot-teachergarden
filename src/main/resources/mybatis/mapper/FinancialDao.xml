<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hwb.tg.Dao.FinancialDao">
    <resultMap type="com.hwb.tg.pojo.FinancialReturn" id="financialSelect">
        <id column="month" property="month"/>
        <id column="year" property="year"></id>
        <collection property="everyMonthFinancialDetails" javaType="java.util.ArrayList"
                    ofType="com.hwb.tg.pojo.EveryMonthFinancialDetail">
            <id property="moneyAbstract" column="abstractFinancial"/>
            <id property="money" column="money"></id>
            <id column="financialId" property="financialId"></id>
        </collection>
    </resultMap>

    <select id="getFinancialByTeacherId" resultMap="financialSelect">
        SELECT
            *
        FROM
            financial
        WHERE
            financial.teacherId = #{param1}
            AND ( financial.`year`, financial.`month` ) IN (
            SELECT DISTINCT
                f.`year`,
                f.`month`
            FROM
                (
                SELECT DISTINCT
                    `year`,
                    `month`
                FROM
                    financial
                WHERE
                    financial.teacherId = #{param1}
                ORDER BY
                    financial.`year` DESC,
                    financial.`month` DESC
                    LIMIT #{param2}, #{param3}
            ) AS f)
    </select>

    <select id="getFinancialLength" resultType="java.lang.Integer">
        SELECT
            count(*)
        FROM
        ( SELECT DISTINCT `year`, `month` FROM financial WHERE financial.teacherId = #{param1} ) AS f

    </select>

    <select id="searchFinancialByTeacherIdAndYear" resultMap="financialSelect">
        SELECT
            *
        FROM
            financial
        WHERE
            financial.teacherId = #{param1}
            AND ( financial.`year`, financial.`month` ) IN (
            SELECT DISTINCT
                `year`,
                `month`
            FROM
                ( SELECT DISTINCT `year`,`month`  FROM financial  ) AS f
            WHERE
                financial.teacherId = #{param1}
                and
                financial.year = #{param4}
            )
    </select>

    <select id="searchFinancialByTeacherIdAndMonth" resultMap="financialSelect">
        SELECT
            *
        FROM
            financial
        WHERE
            financial.teacherId = #{param1}
            AND ( financial.`year`, financial.`month` ) IN (
            SELECT DISTINCT
                `year`,
                `month`
            FROM
                ( SELECT DISTINCT `year`,`month`  FROM financial  ) AS f
            WHERE
                financial.teacherId = #{param1}
                and
                financial.month = #{param4}
            )
    </select>

    <select id="searchFinancialByTeacherIdAndYearAndMonth" resultMap="financialSelect">
        SELECT
            *
        FROM
            financial
        WHERE
            financial.teacherId = #{param1}
            AND ( financial.`year`, financial.`month` ) IN (
            SELECT DISTINCT
                `year`,
                `month`
            FROM
                ( SELECT DISTINCT `year`,`month`  FROM financial  ) AS f
            WHERE
                financial.teacherId = #{param1}
                and
                financial.month = #{param5}
                and
                financial.year = #{param4}
            )
    </select>

    <insert id="uploadFinancial">
        insert into
            financial (teacherId,year,month ,abstractFinancial,money)
        values
            (#{param1},#{param2},#{param3},#{param4},#{param5})
    </insert>

    <select id="getLastMonth" resultType="java.util.Map">
        (
            SELECT DISTINCT
                `year`,
                `month`
            FROM
                financial
            ORDER BY
                financial.`year` DESC,
                financial.`month` DESC
            LIMIT 0, 1
        )
    </select>

    <resultMap id="getFinancialInfo" type="com.hwb.tg.pojo.FinancialInfoAdmin">
        <id property="teacherId" column="teacherId"></id>
        <result column="name" property="teacherName"></result>
        <result column="jobNumber" property="jobNumber"></result>
        <collection property="financialLists" javaType="java.util.List" ofType="com.hwb.tg.pojo.FinancialReturn">
            <id property="year" column="year"></id>
            <id property="month" column="month"></id>
            <collection property="everyMonthFinancialDetails" javaType="java.util.List"
                        ofType="com.hwb.tg.pojo.EveryMonthFinancialDetail">
                <id property="moneyAbstract" column="abstractFinancial"/>
                <id property="money" column="money"></id>
                <id column="financialId" property="financialId"></id>
            </collection>
        </collection>
    </resultMap>

    <!--

        getOneMonth
        管理员获取财务信息的第一个map
        第一步联合财务信息表获取教师ID、姓名等

     -->
    <resultMap id="newFinancialMapFirst" type="com.hwb.tg.pojo.FinancialInfoAdmin">
        <id property="teacherId" column="teacherId"></id>
        <result column="name" property="teacherName"></result>
        <result column="jobNumber" property="jobNumber"></result>
        <collection property="financialLists" javaType="java.util.List" ofType="com.hwb.tg.pojo.FinancialReturn"
                    select="getOneMonthSecond" column="{teacherId = teacherId, month = month , year = year}">
        </collection>
    </resultMap>

    <!--

        getOneMonth
        管理员获取财务信息第二步
        封装列表中的内容

    -->
    <resultMap id="newFinancialMapSecond" type="com.hwb.tg.pojo.FinancialReturn">
        <id property="year" column="year"></id>
        <id property="month" column="month"></id>
        <collection property="everyMonthFinancialDetails" javaType="java.util.List"
                    ofType="com.hwb.tg.pojo.EveryMonthFinancialDetail">
            <id property="moneyAbstract" column="abstractFinancial"/>
            <id property="money" column="money"></id>
            <id column="financialId" property="financialId"></id>
        </collection>
    </resultMap>

    <select id="getOneMonthSecond" resultMap="newFinancialMapSecond">
        SELECT
            financial.teacherId,
            financial.`year`,
            financial.`month`,
            financial.abstractFinancial,
            financial.money,
            financial.financialId,
            teacher.`name`,
            teacher.`jobNumber`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
            financial.`year` = #{year} AND
            financial.`month` = #{month} AND
			teacher.teacherId = #{teacherId}
    </select>

    <select id="getOneMonth" resultMap="newFinancialMapFirst">
         SELECT DISTINCT
            financial.teacherId,
            teacher.`name`,
            teacher.`jobNumber`,
            financial.`year`,
            financial.`month`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
            financial.`year` = #{param1} AND
            financial.`month` = #{param2}
    </select>

    <select id="getTeacherYearMonth" resultMap="newFinancialMapFirst">
        (SELECT DISTINCT
            financial.teacherId,
            teacher.`name`,
            teacher.`jobNumber`,
            financial.`year`,
            financial.`month`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
            financial.`year` = #{param1} AND
            financial.`month` = #{param2} AND
            financial.teacherId = #{param3})
    </select>


    <!--
        仅通过月份查询
    -->
    <resultMap id="getOnlyByMonthReturnMapFirst" type="com.hwb.tg.pojo.FinancialInfoAdmin">
        <id property="teacherId" column="teacherId"></id>
        <result column="name" property="teacherName"></result>
        <result column="jobNumber" property="jobNumber"></result>
        <collection property="financialLists" javaType="java.util.List" ofType="com.hwb.tg.pojo.FinancialReturn"
                    select="getOnlyByMonthSQLSecond" column="{teacherId = teacherId, month = month }">
        </collection>
    </resultMap>
    <select id="getOnlyByMonth" resultMap="getOnlyByMonthReturnMapFirst">
        SELECT DISTINCT
            financial.teacherId,
            teacher.`name`,
            teacher.`jobNumber`,
            financial.`month`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
            financial.`month` = #{param1}
    </select>
    <select id="getOnlyByMonthSQLSecond" resultMap="newFinancialMapSecond">
        SELECT
            financial.teacherId,
            financial.`year`,
            financial.`month`,
            financial.abstractFinancial,
            financial.money,
            financial.financialId,
            teacher.`name`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
            financial.`month` = #{month} AND
			teacher.teacherId = #{teacherId}
    </select>

    <!--
        仅通过年份查询
    -->
    <resultMap id="getOnlyByYearReturnMapFirst" type="com.hwb.tg.pojo.FinancialInfoAdmin">
        <id property="teacherId" column="teacherId"></id>
        <result column="name" property="teacherName"></result>
        <result column="jobNumber" property="jobNumber"></result>
        <collection property="financialLists" javaType="java.util.List" ofType="com.hwb.tg.pojo.FinancialReturn"
                    select="getOnlyByYearSQLSecond" column="{teacherId = teacherId, year = year }">
        </collection>
    </resultMap>
    <select id="getOnlyByYear" resultMap="getOnlyByYearReturnMapFirst">
        SELECT DISTINCT
            financial.teacherId,
            teacher.`name`,
            teacher.`jobNumber`,
            financial.`year`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
            financial.`year` = #{param1}
    </select>
    <select id="getOnlyByYearSQLSecond" resultMap="newFinancialMapSecond">
        SELECT
            financial.teacherId,
            financial.`year`,
            financial.`month`,
            financial.abstractFinancial,
            financial.money,
            financial.financialId,
            teacher.`name`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
            financial.`year` = #{year} AND
			teacher.teacherId = #{teacherId}
    </select>

    <!--
        按年份查询结束
    -->



    <!--
        仅通过ID查询
    -->
    <resultMap id="getOnlyByTeacherIdReturnMapFirst" type="com.hwb.tg.pojo.FinancialInfoAdmin">
        <id property="teacherId" column="teacherId"></id>
        <result column="name" property="teacherName"></result>
        <result column="jobNumber" property="jobNumber"></result>
        <collection property="financialLists" javaType="java.util.List" ofType="com.hwb.tg.pojo.FinancialReturn"
                    select="getOnlyByTeacherIdSQLSecond" column="{teacherId = teacherId}">
        </collection>
    </resultMap>
    <select id="getOnlyByTeacherId" resultMap="getOnlyByTeacherIdReturnMapFirst">
        SELECT DISTINCT
            financial.teacherId,
            teacher.`name`,
            teacher.`jobNumber`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
            financial.`teacherId` = #{param1}
    </select>
    <select id="getOnlyByTeacherIdSQLSecond" resultMap="newFinancialMapSecond">
        SELECT
            financial.teacherId,
            financial.`year`,
            financial.`month`,
            financial.abstractFinancial,
            financial.money,
            financial.financialId,
            teacher.`name`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
			teacher.teacherId = #{teacherId}
    </select>


    <!--
        仅通过ID查询结束
    -->


    <!--
        仅通过ID和年份查询
    -->
    <resultMap id="getTeacherByIDANdYearReturnMapFirst" type="com.hwb.tg.pojo.FinancialInfoAdmin">
        <id property="teacherId" column="teacherId"></id>
        <result column="name" property="teacherName"></result>
        <result column="jobNumber" property="jobNumber"></result>
        <collection property="financialLists" javaType="java.util.List" ofType="com.hwb.tg.pojo.FinancialReturn"
                    select="getTeacherByIDANdYearSQLSecond" column="{teacherId = teacherId, year = year}">
        </collection>
    </resultMap>
    <select id="getTeacherByIDANdYear" resultMap="getTeacherByIDANdYearReturnMapFirst">
        SELECT DISTINCT
            financial.teacherId,
            teacher.`name`,
            teacher.`jobNumber`,
            financial.`year`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
            financial.`year` = #{param1} AND
            financial.teacherId = #{param2})
    </select>
    <select id="getTeacherByIDANdYearSQLSecond" resultMap="newFinancialMapSecond">
        SELECT
            financial.teacherId,
            financial.`year`,
            financial.`month`,
            financial.abstractFinancial,
            financial.money,
            financial.financialId,
            teacher.`name`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
			teacher.teacherId = #{teacherId},
			financial.`year` = #{year}
    </select>
    <!--
            仅通过ID和年份查询结束
    -->


    <!--
        仅通过ID和月份查询
    -->
    <resultMap id="getTeacherByIDANdMonthReturnMapFirst" type="com.hwb.tg.pojo.FinancialInfoAdmin">
        <id property="teacherId" column="teacherId"></id>
        <result column="name" property="teacherName"></result>
        <result column="jobNumber" property="jobNumber"></result>
        <collection property="financialLists" javaType="java.util.List" ofType="com.hwb.tg.pojo.FinancialReturn"
                    select="getTeacherByIDANdMonthSQLSecond" column="{teacherId = teacherId, month = month}">
        </collection>
    </resultMap>
    <select id="getTeacherByIDANdMonth" resultMap="getTeacherByIDANdMonthReturnMapFirst">
        SELECT DISTINCT
            financial.teacherId,
            teacher.`name`,
            teacher.`jobNumber`,
            financial.`month`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
            financial.`month` = #{param1} AND
            financial.teacherId = #{param2})
    </select>
    <select id="getTeacherByIDANdMonthSQLSecond" resultMap="newFinancialMapSecond">
        SELECT
            financial.teacherId,
            financial.`year`,
            financial.`month`,
            financial.abstractFinancial,
            financial.money,
            financial.financialId,
            teacher.`name`
        FROM
            financial
            INNER JOIN
            teacher
            ON
                financial.teacherId = teacher.teacherId
        WHERE
			teacher.teacherId = #{teacherId},
			financial.`month` = #{month}
    </select>


    <update id="updateFinancial" parameterType="com.hwb.tg.pojo.EditFinancial">
        update
            financial
        set
            abstractFinancial = #{abstractFinancial},
            money = #{money}
        where
            financialId = #{financialId}
    </update>


    <delete id="deleteFinancial">
        delete from financial where financialId = #{param1}
    </delete>
</mapper>
